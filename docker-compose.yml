version: '3.8'

services:
  uatu-watcher:
    build: .
    container_name: uatu-watcher
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data:/data
      - ./config:/app/config
    environment:
      - RUST_ENV=production
      - RUST_LOG=uatu_watcher=info,tower_http=debug
      - UATU_DATABASE__URL=sqlite:///data/uatu.db
      - UATU_SERVER__PORT=3000
      
      # Notification settings (override with .env)
      - UATU_NOTIFICATIONS__SMTP__HOST=${SMTP_HOST:-smtp.gmail.com}
      - UATU_NOTIFICATIONS__SMTP__PORT=${SMTP_PORT:-587}
      - UATU_NOTIFICATIONS__SMTP__USERNAME=${SMTP_USER}
      - UATU_NOTIFICATIONS__SMTP__PASSWORD=${SMTP_PASS}
      - UATU_NOTIFICATIONS__SMTP__FROM_ADDRESS=${SMTP_FROM}
      - UATU_NOTIFICATIONS__DISCORD__WEBHOOK_URL=${DISCORD_WEBHOOK}
      
      # App settings
      - UATU_SERVER__BASE_URL=${BASE_URL:-http://localhost:3000}
      - UATU_SECURITY__SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      
      # Scraper settings
      - UATU_SCRAPER__MAX_CONCURRENT_CHECKS=${MAX_CONCURRENT_CHECKS:-5}
      - UATU_SCRAPER__RETRY_ATTEMPTS=${RETRY_ATTEMPTS:-3}
      - UATU_SCRAPER__RETRY_DELAY_MS=${RETRY_DELAY:-5000}
      - CHROME_PATH=/usr/bin/chromium-browser
      
    networks:
      - uatu-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Optional: Add Prometheus for metrics (production)
  prometheus:
    image: prom/prometheus:latest
    container_name: uatu-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - uatu-network
    profiles:
      - monitoring

  # Optional: Add Grafana for dashboards (production)
  grafana:
    image: grafana/grafana:latest
    container_name: uatu-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - uatu-network
    profiles:
      - monitoring

networks:
  uatu-network:
    driver: bridge

volumes:
  data:
  prometheus_data:
  grafana_data: